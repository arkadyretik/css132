
add2numbers.o:	file format Mach-O 64-bit x86-64

Disassembly of section __TEXT,__text:
__text:
; {
100000f20:	55 	pushq	%rbp
100000f21:	48 89 e5 	movq	%rsp, %rbp
100000f24:	48 83 ec 20 	subq	$32, %rsp
100000f28:	48 8d 3d 57 00 00 00 	leaq	87(%rip), %rdi
100000f2f:	c7 45 fc 00 00 00 00 	movl	$0, -4(%rbp)
; int i = 10;
100000f36:	c7 45 f8 0a 00 00 00 	movl	$10, -8(%rbp)
; int j = 20;
100000f3d:	c7 45 f4 14 00 00 00 	movl	$20, -12(%rbp)
; int k = i + j;
100000f44:	8b 45 f8 	movl	-8(%rbp), %eax
100000f47:	03 45 f4 	addl	-12(%rbp), %eax
100000f4a:	89 45 f0 	movl	%eax, -16(%rbp)
; printf("Adding two numbers, the result is %d\n", k);
100000f4d:	8b 75 f0 	movl	-16(%rbp), %esi
100000f50:	b0 00 	movb	$0, %al
100000f52:	e8 0d 00 00 00 	callq	13
100000f57:	31 f6 	xorl	%esi, %esi
; return 0;
100000f59:	89 45 ec 	movl	%eax, -20(%rbp)
100000f5c:	89 f0 	movl	%esi, %eax
100000f5e:	48 83 c4 20 	addq	$32, %rsp
100000f62:	5d 	popq	%rbp
100000f63:	c3 	retq

_main:
; {
100000f20:	55 	pushq	%rbp
100000f21:	48 89 e5 	movq	%rsp, %rbp
100000f24:	48 83 ec 20 	subq	$32, %rsp
100000f28:	48 8d 3d 57 00 00 00 	leaq	87(%rip), %rdi
100000f2f:	c7 45 fc 00 00 00 00 	movl	$0, -4(%rbp)
; int i = 10;
100000f36:	c7 45 f8 0a 00 00 00 	movl	$10, -8(%rbp)
; int j = 20;
100000f3d:	c7 45 f4 14 00 00 00 	movl	$20, -12(%rbp)
; int k = i + j;
100000f44:	8b 45 f8 	movl	-8(%rbp), %eax
100000f47:	03 45 f4 	addl	-12(%rbp), %eax
100000f4a:	89 45 f0 	movl	%eax, -16(%rbp)
; printf("Adding two numbers, the result is %d\n", k);
100000f4d:	8b 75 f0 	movl	-16(%rbp), %esi
100000f50:	b0 00 	movb	$0, %al
100000f52:	e8 0d 00 00 00 	callq	13
100000f57:	31 f6 	xorl	%esi, %esi
; return 0;
100000f59:	89 45 ec 	movl	%eax, -20(%rbp)
100000f5c:	89 f0 	movl	%esi, %eax
100000f5e:	48 83 c4 20 	addq	$32, %rsp
100000f62:	5d 	popq	%rbp
100000f63:	c3 	retq
Disassembly of section __TEXT,__stubs:
__stubs:
100000f64:	ff 25 a6 00 00 00 	jmpq	*166(%rip)
Disassembly of section __TEXT,__stub_helper:
__stub_helper:
100000f6c:	4c 8d 1d 95 00 00 00 	leaq	149(%rip), %r11
100000f73:	41 53 	pushq	%r11
100000f75:	ff 25 85 00 00 00 	jmpq	*133(%rip)
100000f7b:	90 	nop
100000f7c:	68 00 00 00 00 	pushq	$0
100000f81:	e9 e6 ff ff ff 	jmp	-26 </var/folders/4d/jb43qnb97s7gwhf8810vcx1m0000gn/T/add2numbers-ab2b1c.o+0xA65BA8D6>
